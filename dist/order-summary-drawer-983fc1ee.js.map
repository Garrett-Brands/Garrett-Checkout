{"version":3,"file":"order-summary-drawer-983fc1ee.js","mappings":"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","sources":["webpack://checkout/./packages/core/src/app/order/getLineItemsCount.ts","webpack://checkout/./packages/ui/src/icon/IconCloseWithBorder.tsx","webpack://checkout/./packages/core/src/app/order/OrderModalSummarySubheader.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryModal.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryDrawer.tsx","webpack://checkout/./packages/core/src/app/ui/modal/ModalTrigger.tsx","webpack://checkout/./packages/ui/src/button/Button.tsx"],"sourcesContent":["import { LineItemMap } from '@bigcommerce/checkout-sdk';\n\nexport default function getLineItemsCount({\n    physicalItems,\n    digitalItems,\n    giftCertificates,\n    customItems,\n}: LineItemMap): number {\n    return (\n        physicalItems.length +\n        digitalItems.length +\n        giftCertificates.length +\n        (customItems || []).length\n    );\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconCloseWithBorder: FunctionComponent = () => (\n    <svg fill=\"none\" height=\"37\" viewBox=\"0 0 38 37\" width=\"38\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M38 18.5C38 28.7173 29.7173 37 19.5 37C9.28273 37 1 28.7173 1 18.5C1 8.28273 9.28273 0 19.5 0C29.7173 0 38 8.28273 38 18.5Z\"\n            fill=\"#F3F3F3\"\n        />\n        <path\n            clipRule=\"evenodd\"\n            d=\"M24.6671 24.6674L12.9998 13.0002L14.4141 11.5859L26.0813 23.2532L24.6671 24.6674Z\"\n            fill=\"black\"\n            fillRule=\"evenodd\"\n        />\n        <path\n            clipRule=\"evenodd\"\n            d=\"M25.6674 13.0004L14.0002 24.6676L12.5859 23.2534L24.2532 11.5862L25.6674 13.0004Z\"\n            fill=\"black\"\n            fillRule=\"evenodd\"\n        />\n    </svg>\n);\n\nexport default withIconContainer(IconCloseWithBorder);\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport getItemsCount from './getItemsCount';\n\nexport interface OrderModalSummarySubheaderProps {\n    items: LineItemMap\n    amountWithCurrency: ReactNode;\n    shopperCurrencyCode: string;\n    storeCurrencyCode: string;\n}\n\nconst OrderModalSummarySubheader: FunctionComponent<OrderModalSummarySubheaderProps> = ({\n    items,\n    shopperCurrencyCode,\n    storeCurrencyCode,\n    amountWithCurrency,\n}) => {\n    const itemsCount = getItemsCount(items);\n    const hasDifferentCurrency = shopperCurrencyCode !== storeCurrencyCode;\n    const itemsText = itemsCount === 1 ? 'cart.item' : 'cart.items';\n\n    return <>\n        {itemsCount} <TranslatedString id={itemsText} /> | {amountWithCurrency} {\n            hasDifferentCurrency && <span>({shopperCurrencyCode})</span>\n        }\n    </>;\n};\n\nexport default memo(OrderModalSummarySubheader);\n","import {\n    LineItemMap,\n    ShopperCurrency as ShopperCurrencyType,\n    StoreCurrency,\n} from '@bigcommerce/checkout-sdk';\nimport React, { cloneElement, FunctionComponent, isValidElement, ReactNode, useEffect, useState } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { Button, IconCloseWithBorder } from '@bigcommerce/checkout/ui';\n\nimport { ShopperCurrency } from '../currency';\nimport { Modal, ModalHeader } from '../ui/modal';\nimport { isSmallScreen } from '../ui/responsive';\n\nimport OrderModalSummarySubheader from './OrderModalSummarySubheader';\nimport OrderSummaryItems from './OrderSummaryItems';\nimport OrderSummaryPrice from './OrderSummaryPrice';\nimport OrderSummarySection from './OrderSummarySection';\nimport OrderSummarySubtotals, { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\nimport OrderSummaryTotal from './OrderSummaryTotal';\n\nexport interface OrderSummaryDrawerProps {\n    additionalLineItems?: ReactNode;\n    items: LineItemMap;\n    total: number;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrencyType;\n    isOpen: boolean;\n    headerLink?: ReactNode & React.HTMLProps<HTMLDivElement>;\n    onRequestClose?(): void;\n    onAfterOpen?(): void;\n}\n\nconst OrderSummaryModal: FunctionComponent<\n    OrderSummaryDrawerProps & OrderSummarySubtotalsProps\n> = ({\n    additionalLineItems,\n    children,\n    isTaxIncluded,\n    taxes,\n    onRequestClose,\n    onAfterOpen,\n    storeCurrency,\n    shopperCurrency,\n    isOpen,\n    headerLink,\n    items,\n    total,\n    ...orderSummarySubtotalsProps\n}) => {\n    const displayInclusiveTax = isTaxIncluded && taxes && taxes.length > 0;\n\n    const subHeaderText = <OrderModalSummarySubheader\n        amountWithCurrency={<ShopperCurrency amount={total} />}\n        items={items}\n        shopperCurrencyCode={shopperCurrency.code}\n        storeCurrencyCode={storeCurrency.code}\n    />;\n\n    const continueButton = isSmallScreen() && <Button\n        className='cart-modal-continue'\n        data-test=\"manage-instrument-cancel-button\"\n        onClick={preventDefault(onRequestClose)}>\n            <TranslatedString id=\"cart.return_to_checkout\" />\n    </Button>;\n\n    interface ShipDateObject {\n        formatted: string;\n    }\n\n    interface DeliveryEstimateObject {\n        formatted: string;\n    }\n\n    const [formattedShipDate, setFormattedShipDate] = useState<string | null>(null);\n    const [formattedDeliveryEstimate, setFormatedDeliveryEstimate] = useState<string | null>(null);\n\n    useEffect(() => {\n    const shipDateObject = localStorage.getItem('selectedShipDateObject');\n    const deliveryEstimateObject = localStorage.getItem('deliveryEstimateObject');\n    if (shipDateObject) {\n        const parsedShipDateObject: ShipDateObject = JSON.parse(shipDateObject);\n        setFormattedShipDate(parsedShipDateObject.formatted);\n    }\n    if (deliveryEstimateObject) {\n        const parsedDeliveryEstimateObject: DeliveryEstimateObject = JSON.parse(deliveryEstimateObject);\n        setFormatedDeliveryEstimate(parsedDeliveryEstimateObject.formatted);\n        }\n    }, []); // Empty dependency array ensures this only runs once when the component mounts\n\n    return <Modal\n        additionalBodyClassName=\"cart-modal-body optimizedCheckout-orderSummary\"\n        additionalHeaderClassName=\"cart-modal-header optimizedCheckout-orderSummary with-continue-button\"\n        additionalModalClassName=\"optimizedCheckout-cart-modal\"\n        footer={continueButton}\n        header={renderHeader({\n            headerLink,\n            subHeaderText,\n            onRequestClose,\n        })}\n        isOpen={isOpen}\n        onAfterOpen={onAfterOpen}\n        onRequestClose={onRequestClose}\n    >\n        <OrderSummarySection>\n            <OrderSummaryItems displayLineItemsCount={false} items={items} />\n        </OrderSummarySection>\n        { formattedShipDate && \n                <OrderSummarySection>\n                    <div className=\"shipping-preview-container-orderSummary\">\n                        <div className=\"shipping-preview-item\" data-type=\"ship-date\">\n                            <span>Ship Date</span>\n                            <span>{formattedShipDate}</span>\n                        </div>\n                        <div className=\"shipping-preview-item\" data-type=\"delivery-date\">\n                            <span>Estimated Delivery</span>\n                            <span>{formattedDeliveryEstimate}</span>\n                        </div>\n                    </div>\n                </OrderSummarySection>\n        }\n        <OrderSummarySection>\n            <OrderSummarySubtotals isTaxIncluded={isTaxIncluded} taxes={taxes} {...orderSummarySubtotalsProps} />\n            {additionalLineItems}\n        </OrderSummarySection>\n        <OrderSummarySection>\n            <OrderSummaryTotal\n                orderAmount={total}\n                shopperCurrencyCode={shopperCurrency.code}\n                storeCurrencyCode={storeCurrency.code}\n            />\n        </OrderSummarySection>\n        {displayInclusiveTax && <OrderSummarySection>\n                <h5\n                    className=\"cart-taxItem cart-taxItem--subtotal optimizedCheckout-contentPrimary\"\n                    data-test=\"tax-text\"\n                >\n                    <TranslatedString\n                        id=\"tax.inclusive_label\"\n                    />\n                </h5>\n                {(taxes || []).map((tax, index) => (\n                    <OrderSummaryPrice\n                        amount={tax.amount}\n                        key={index}\n                        label={tax.name}\n                        testId=\"cart-taxes\"\n                    />\n                ))}\n            </OrderSummarySection>}\n    </Modal>\n};\n\nconst renderHeader: FunctionComponent<{\n    headerLink?: ReactNode & React.HTMLProps<HTMLDivElement>;\n    subHeaderText: ReactNode;\n    onRequestClose?(): void;\n}> = ({ onRequestClose, headerLink, subHeaderText }) => {\n    let newHeaderLink;\n\n    if (isValidElement(headerLink)) {\n        newHeaderLink = cloneElement(headerLink, { className: 'modal-header-link cart-modal-link test' });\n    }\n\n    return <>\n        {newHeaderLink ?? headerLink}\n        <ModalHeader additionalClassName=\"cart-modal-title\">\n            <div>\n                <TranslatedString id=\"cart.cart_heading\" />\n                <div className='cart-heading-subheader'>{subHeaderText}</div>\n            </div>\n        </ModalHeader>\n        <a className=\"cart-modal-close\" href=\"#\" onClick={preventDefault(onRequestClose)}>\n            <span className=\"is-srOnly\">\n                <TranslatedString id=\"common.close_action\" />\n            </span>\n            <IconCloseWithBorder />\n        </a>\n    </>\n};\n\nexport default OrderSummaryModal;\n","import {\n    LineItemMap,\n    ShopperCurrency as ShopperCurrencyType,\n    StoreCurrency,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { ShopperCurrency } from '../currency';\nimport { IconGiftCertificate } from '../ui/icon';\nimport { ModalTrigger } from '../ui/modal';\n\nimport getItemsCount from './getItemsCount';\nimport getLineItemsCount from './getLineItemsCount';\nimport OrderSummaryModal from './OrderSummaryModal';\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\nimport removeBundledItems from './removeBundledItems';\n\nexport interface OrderSummaryDrawerProps {\n    lineItems: LineItemMap;\n    total: number;\n    headerLink: ReactNode;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrencyType;\n    additionalLineItems?: ReactNode;\n}\n\nconst OrderSummaryDrawer: FunctionComponent<\n    OrderSummaryDrawerProps & OrderSummarySubtotalsProps\n> = ({\n    additionalLineItems,\n    coupons,\n    discountAmount,\n    giftCertificates,\n    handlingAmount,\n    headerLink,\n    isTaxIncluded,\n    lineItems,\n    onRemovedCoupon,\n    onRemovedGiftCertificate,\n    shippingAmount,\n    shopperCurrency,\n    storeCreditAmount,\n    giftWrappingAmount,\n    storeCurrency,\n    subtotalAmount,\n    taxes,\n    total,\n    fees,\n}) => {\n    const nonBundledLineItems = useMemo(() => removeBundledItems(lineItems), [lineItems]);\n\n    const renderModal = useCallback(\n        (props) => (\n            <OrderSummaryModal\n                {...props}\n                additionalLineItems={additionalLineItems}\n                coupons={coupons}\n                discountAmount={discountAmount}\n                fees={fees}\n                giftCertificates={giftCertificates}\n                giftWrappingAmount={giftWrappingAmount}\n                handlingAmount={handlingAmount}\n                headerLink={headerLink}\n                isTaxIncluded={isTaxIncluded}\n                items={nonBundledLineItems}\n                onRemovedCoupon={onRemovedCoupon}\n                onRemovedGiftCertificate={onRemovedGiftCertificate}\n                shippingAmount={shippingAmount}\n                shopperCurrency={shopperCurrency}\n                storeCreditAmount={storeCreditAmount}\n                storeCurrency={storeCurrency}\n                subtotalAmount={subtotalAmount}\n                taxes={taxes}\n                total={total}\n            />\n        ),\n        [\n            additionalLineItems,\n            coupons,\n            discountAmount,\n            giftCertificates,\n            handlingAmount,\n            headerLink,\n            isTaxIncluded,\n            nonBundledLineItems,\n            onRemovedCoupon,\n            onRemovedGiftCertificate,\n            giftWrappingAmount,\n            shippingAmount,\n            shopperCurrency,\n            storeCreditAmount,\n            storeCurrency,\n            subtotalAmount,\n            taxes,\n            total,\n            fees,\n        ],\n    );\n\n    return (\n        <ModalTrigger modal={renderModal}>\n            {({ onClick, onKeyPress }) => (\n                <div\n                    className=\"cartDrawer optimizedCheckout-orderSummary\"\n                    onClick={onClick}\n                    onKeyPress={onKeyPress}\n                    tabIndex={0}\n                >\n                    <figure\n                        className={classNames('cartDrawer-figure', {\n                            'cartDrawer-figure--stack': getLineItemsCount(nonBundledLineItems) > 1,\n                        })}\n                    >\n                        <div className=\"cartDrawer-imageWrapper\">{getImage(nonBundledLineItems)}</div>\n                    </figure>\n                    <div className=\"cartDrawer-body\">\n                        <h3 className=\"cartDrawer-items optimizedCheckout-headingPrimary\">\n                            <TranslatedString\n                                data={{ count: getItemsCount(nonBundledLineItems) }}\n                                id=\"cart.item_count_text\"\n                            />\n                        </h3>\n                        <a>\n                            <TranslatedString id=\"cart.show_details_action\" />\n                        </a>\n                    </div>\n                    <div className=\"cartDrawer-actions\">\n                        <h3 className=\"cartDrawer-total optimizedCheckout-headingPrimary\">\n                            <ShopperCurrency amount={total} />\n                        </h3>\n                    </div>\n                </div>\n            )}\n        </ModalTrigger>\n    );\n};\n\nfunction getImage(lineItems: LineItemMap): ReactNode {\n    const productWithImage = lineItems.physicalItems[0] || lineItems.digitalItems[0];\n\n    if (productWithImage && productWithImage.imageUrl) {\n        return (\n            <img\n                alt={productWithImage.name}\n                data-test=\"cart-item-image\"\n                src={productWithImage.imageUrl}\n            />\n        );\n    }\n\n    if (lineItems.giftCertificates.length) {\n        return <IconGiftCertificate />;\n    }\n}\n\nexport default memo(OrderSummaryDrawer);\n","import React, {\n    Component,\n    KeyboardEvent,\n    KeyboardEventHandler,\n    MouseEventHandler,\n    ReactNode,\n} from 'react';\n\nexport interface ModalTriggerProps {\n    children(props: { onClick: MouseEventHandler; onKeyPress: KeyboardEventHandler<HTMLDivElement> }): ReactNode;\n    modal(props: ModalTriggerModalProps): ReactNode;\n}\n\nexport interface ModalTriggerModalProps {\n    isOpen: boolean;\n    onRequestClose(): void;\n}\n\nexport interface ModalTriggerState {\n    isOpen: boolean;\n}\n\nexport default class ModalTrigger extends Component<ModalTriggerProps, ModalTriggerState> {\n    state = {\n        isOpen: false,\n    };\n\n    private canHandleEvent = false;\n\n    componentDidMount(): void {\n        this.canHandleEvent = true;\n    }\n\n    componentWillUnmount(): void {\n        this.canHandleEvent = false;\n    }\n\n    render() {\n        const { children, modal } = this.props;\n        const { isOpen } = this.state;\n\n        return (\n            <>\n                {children({\n                    onClick: this.handleOpen,\n                    onKeyPress: this.handleKeyOpen,\n                })}\n\n                {modal({\n                    isOpen,\n                    onRequestClose: this.handleClose,\n                })}\n            </>\n        );\n    }\n\n    private handleOpen: () => void = () => {\n        if (!this.canHandleEvent) {\n            return;\n        }\n\n        this.setState({\n            isOpen: true,\n        });\n    };\n\n    private handleClose: () => void = () => {\n        if (!this.canHandleEvent) {\n            return;\n        }\n\n        this.setState({\n            isOpen: false,\n        });\n    };\n\n    private handleKeyOpen: (keyboardEvent: KeyboardEvent<HTMLElement>) => void = (\n        keyboardEvent,\n    ) => {\n        if (keyboardEvent.key === 'Enter') {\n            this.handleOpen();\n        }\n    };\n}\n","import classNames from 'classnames';\nimport React, { ButtonHTMLAttributes, FunctionComponent } from 'react';\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    isFullWidth?: boolean;\n    isLoading?: boolean;\n    size?: ButtonSize;\n    testId?: string;\n    variant?: ButtonVariant;\n}\n\nexport enum ButtonVariant {\n    Primary = 'primary',\n    Secondary = 'secondary',\n    Action = 'action',\n}\n\nexport enum ButtonSize {\n    Small = 'small',\n    Tiny = 'tiny',\n    Large = 'large',\n}\n\nfunction getClassName(\n    props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\n) {\n    const { className, isFullWidth, isLoading, size, variant } = props;\n\n    return classNames(\n        'button',\n        className,\n        { 'button--primary': variant === ButtonVariant.Primary },\n        { 'button--tertiary': variant === ButtonVariant.Secondary },\n        { 'button--action': variant === ButtonVariant.Action },\n        { 'button--small': size === ButtonSize.Small },\n        { 'button--tiny': size === ButtonSize.Tiny },\n        { 'button--large': size === ButtonSize.Large },\n        { 'button--slab': isFullWidth },\n        {\n            'optimizedCheckout-buttonPrimary':\n                variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\n        },\n        { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\n        { 'is-loading': isLoading },\n    );\n}\n\nconst Button: FunctionComponent<ButtonProps> = ({\n    children,\n    className,\n    disabled,\n    isFullWidth,\n    isLoading,\n    size,\n    testId,\n    type,\n    variant,\n    ...rest\n}) => (\n    <button\n        {...rest}\n        className={getClassName({ className, isFullWidth, isLoading, size, variant })}\n        data-test={testId}\n        disabled={disabled || isLoading}\n        type={type || 'button'}\n    >\n        {children}\n    </button>\n);\n\nexport default Button;\n"],"names":["getLineItemsCount","physicalItems","digitalItems","giftCertificates","customItems","length","fill","height","viewBox","width","xmlns","d","clipRule","fillRule","memo","items","shopperCurrencyCode","storeCurrencyCode","amountWithCurrency","itemsCount","getItemsCount","hasDifferentCurrency","itemsText","TranslatedString","id","renderHeader","newHeaderLink","onRequestClose","headerLink","subHeaderText","isValidElement","cloneElement","className","ModalHeader","additionalClassName","href","onClick","preventDefault","additionalLineItems","isTaxIncluded","taxes","onAfterOpen","storeCurrency","shopperCurrency","isOpen","total","orderSummarySubtotalsProps","displayInclusiveTax","ShopperCurrency","amount","code","continueButton","isSmallScreen","Button","useState","formattedShipDate","setFormattedShipDate","formattedDeliveryEstimate","setFormatedDeliveryEstimate","useEffect","shipDateObject","localStorage","getItem","deliveryEstimateObject","parsedShipDateObject","JSON","parse","formatted","parsedDeliveryEstimateObject","Modal","additionalBodyClassName","additionalHeaderClassName","additionalModalClassName","footer","header","OrderSummarySection","OrderSummaryItems","displayLineItemsCount","OrderSummarySubtotals","OrderSummaryTotal","orderAmount","map","tax","index","OrderSummaryPrice","key","label","name","testId","coupons","discountAmount","handlingAmount","lineItems","onRemovedCoupon","onRemovedGiftCertificate","shippingAmount","storeCreditAmount","giftWrappingAmount","subtotalAmount","fees","nonBundledLineItems","useMemo","removeBundledItems","renderModal","useCallback","props","ModalTrigger","modal","onKeyPress","tabIndex","productWithImage","imageUrl","alt","src","IconGiftCertificate","getImage","data","count","state","canHandleEvent","handleOpen","setState","handleClose","handleKeyOpen","keyboardEvent","componentDidMount","this","componentWillUnmount","render","children","Component","ButtonVariant","ButtonSize","getClassName","isFullWidth","isLoading","size","variant","Primary","Secondary","Action","Small","Tiny","Large","disabled","type","rest"],"sourceRoot":""}