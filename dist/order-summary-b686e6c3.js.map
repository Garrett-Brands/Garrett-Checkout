{"version":3,"file":"order-summary-b686e6c3.js","mappings":"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","sources":["webpack://checkout/./packages/core/src/app/order/OrderSummaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummary.tsx","webpack://checkout/./packages/core/src/app/order/removeBundledItems.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconChevronUp.tsx","webpack://checkout/./packages/core/src/app/order/mapFromCustom.tsx","webpack://checkout/./packages/core/src/app/order/getOrderSummaryItemImage.tsx","webpack://checkout/./packages/core/src/app/order/mapFromDigital.tsx","webpack://checkout/./packages/core/src/app/order/mapFromGiftCertificate.tsx","webpack://checkout/./packages/core/src/app/order/mapFromPhysical.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryItem.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryItems.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryPrice.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummarySection.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryDiscount.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummarySubtotals.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryTotal.tsx","webpack://checkout/./packages/core/src/app/order/getItemsCount.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconGiftCertificate.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '../locale';\n\nconst OrderSummaryHeader: FunctionComponent = ({ children }) => (\n    <header className=\"cart-header\">\n        <h3 className=\"cart-title optimizedCheckout-headingSecondary\">\n            <TranslatedString id=\"cart.cart_heading\" />\n        </h3>\n        {children}\n    </header>\n);\n\nexport default OrderSummaryHeader;\n","import { LineItemMap, ShopperCurrency, StoreCurrency } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, ReactNode, useMemo } from 'react';\n\nimport { TranslatedString } from '../locale';\n\nimport OrderSummaryHeader from './OrderSummaryHeader';\nimport OrderSummaryItems from './OrderSummaryItems';\nimport OrderSummaryPrice from './OrderSummaryPrice';\nimport OrderSummarySection from './OrderSummarySection';\nimport OrderSummarySubtotals, { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\nimport OrderSummaryTotal from './OrderSummaryTotal';\nimport removeBundledItems from './removeBundledItems';\n\nexport interface OrderSummaryProps {\n    lineItems: LineItemMap;\n    total: number;\n    headerLink: ReactNode;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrency;\n    additionalLineItems?: ReactNode;\n}\n\nconst OrderSummary: FunctionComponent<OrderSummaryProps & OrderSummarySubtotalsProps> = ({\n    isTaxIncluded,\n    taxes,\n    storeCurrency,\n    shopperCurrency,\n    headerLink,\n    additionalLineItems,\n    lineItems,\n    total,\n    ...orderSummarySubtotalsProps\n}) => {\n    const nonBundledLineItems = useMemo(() => removeBundledItems(lineItems), [lineItems]);\n    const displayInclusiveTax = isTaxIncluded && taxes && taxes.length > 0;\n\n    return (\n        <article className=\"cart optimizedCheckout-orderSummary\" data-test=\"cart\">\n            <OrderSummaryHeader>{headerLink}</OrderSummaryHeader>\n\n            <OrderSummarySection>\n                <OrderSummaryItems items={nonBundledLineItems} />\n            </OrderSummarySection>\n\n            <OrderSummarySection>\n                <OrderSummarySubtotals isTaxIncluded={isTaxIncluded} taxes={taxes} {...orderSummarySubtotalsProps} />\n                {additionalLineItems}\n            </OrderSummarySection>\n\n            <OrderSummarySection>\n                <OrderSummaryTotal\n                    orderAmount={total}\n                    shopperCurrencyCode={shopperCurrency.code}\n                    storeCurrencyCode={storeCurrency.code}\n                />\n            </OrderSummarySection>\n\n            {displayInclusiveTax && <OrderSummarySection>\n                <h5\n                    className=\"cart-taxItem cart-taxItem--subtotal optimizedCheckout-contentPrimary\"\n                    data-test=\"tax-text\"\n                >\n                    <TranslatedString\n                        id=\"tax.inclusive_label\"\n                    />\n                </h5>\n                {(taxes || []).map((tax, index) => (\n                    <OrderSummaryPrice\n                        amount={tax.amount}\n                        key={index}\n                        label={tax.name}\n                        testId=\"cart-taxes\"\n                    />\n                ))}\n            </OrderSummarySection>}\n        </article>\n    );\n};\n\nexport default OrderSummary;\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\n\nexport default function removeBundledItems(lineItems: LineItemMap): LineItemMap {\n    return {\n        ...lineItems,\n        physicalItems: lineItems.physicalItems.filter((item) => typeof item.parentId !== 'string'),\n        digitalItems: lineItems.digitalItems.filter((item) => typeof item.parentId !== 'string'),\n    };\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronUp: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconChevronUp);\n","import { CustomItem } from '@bigcommerce/checkout-sdk';\n\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromCustom(item: CustomItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.extendedListPrice,\n        name: item.name,\n    };\n}\n\nexport default mapFromCustom;\n","import { DigitalItem, PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode } from 'react';\n\nexport default function getOrderSummaryItemImage(item: DigitalItem | PhysicalItem): ReactNode {\n    if (!item.imageUrl) {\n        return;\n    }\n\n    return <img alt={item.name} data-test=\"cart-item-image\" src={item.imageUrl} />;\n}\n","import { DigitalItem } from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { TranslatedString } from '../locale';\n\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\nimport { OrderSummaryItemOption, OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromDigital(item: DigitalItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.extendedListPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        name: item.name,\n        image: getOrderSummaryItemImage(item),\n        productOptions: [\n            ...(item.options || []).map((option) => ({\n                testId: 'cart-item-product-option',\n                content: `${option.name} ${option.value}`,\n            })),\n            getDigitalItemDescription(item),\n        ],\n    };\n}\n\nfunction getDigitalItemDescription(item: DigitalItem): OrderSummaryItemOption {\n    if (!item.downloadPageUrl) {\n        return {\n            testId: 'cart-item-digital-product',\n            content: <TranslatedString id=\"cart.digital_item_text\" />,\n        };\n    }\n\n    return {\n        testId: 'cart-item-digital-product-download',\n        content: (\n            <a href={item.downloadPageUrl} rel=\"noopener noreferrer\" target=\"_blank\">\n                <TranslatedString id=\"cart.downloads_action\" />\n            </a>\n        ),\n    };\n}\n\nexport default mapFromDigital;\n","import { GiftCertificateItem } from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { IconGiftCertificate } from '../ui/icon';\n\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromGiftCertificate(item: GiftCertificateItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: 1,\n        amount: item.amount,\n        name: item.name,\n        image: (\n            <span className=\"productImage-giftCertificate\" data-test=\"cart-item-gift-certificate\">\n                <IconGiftCertificate />\n            </span>\n        ),\n    };\n}\n\nexport default mapFromGiftCertificate;\n","import { PhysicalItem } from '@bigcommerce/checkout-sdk';\n\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromPhysical(item: PhysicalItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.extendedComparisonPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        name: item.name,\n        image: getOrderSummaryItemImage(item),\n        description: item.giftWrapping ? item.giftWrapping.name : undefined,\n        productOptions: (item.options || []).map((option) => ({\n            testId: 'cart-item-product-option',\n            content: `${option.name} ${option.value}`,\n        })),\n    };\n}\n\nexport default mapFromPhysical;\n","import classNames from 'classnames';\nimport { isNumber } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { ShopperCurrency } from '../currency';\n\nexport interface OrderSummaryItemProps {\n    id: string | number;\n    amount: number;\n    quantity: number;\n    name: string;\n    amountAfterDiscount?: number;\n    image?: ReactNode;\n    description?: ReactNode;\n    productOptions?: OrderSummaryItemOption[];\n}\n\nexport interface OrderSummaryItemOption {\n    testId: string;\n    content: ReactNode;\n}\n\nconst OrderSummaryItem: FunctionComponent<OrderSummaryItemProps> = ({\n    amount,\n    amountAfterDiscount,\n    image,\n    name,\n    productOptions,\n    quantity,\n    description,\n}) => (\n    <div className=\"product\" data-test=\"cart-item\">\n        <figure className=\"product-column product-figure\">{image}</figure>\n\n        <div className=\"product-column product-body\">\n            <h4\n                className=\"product-title optimizedCheckout-contentPrimary\"\n                data-test=\"cart-item-product-title\"\n            >\n                {`${quantity} x ${name}`}\n            </h4>\n            {productOptions && productOptions.length > 0 && (\n                <ul\n                    className=\"product-options optimizedCheckout-contentSecondary\"\n                    data-test=\"cart-item-product-options\"\n                >\n                    {productOptions.map((option, index) => (\n                        <li className=\"product-option\" data-test={option.testId} key={index}>\n                            {option.content}\n                        </li>\n                    ))}\n                </ul>\n            )}\n            {description && (\n                <div\n                    className=\"product-description optimizedCheckout-contentSecondary\"\n                    data-test=\"cart-item-product-description\"\n                >\n                    {description}\n                </div>\n            )}\n        </div>\n\n        <div className=\"product-column product-actions\">\n            <div\n                className={classNames('product-price', 'optimizedCheckout-contentPrimary', {\n                    'product-price--beforeDiscount':\n                        isNumber(amountAfterDiscount) && amountAfterDiscount !== amount,\n                })}\n                data-test=\"cart-item-product-price\"\n            >\n                <ShopperCurrency amount={amount} />\n            </div>\n\n            {isNumber(amountAfterDiscount) && amountAfterDiscount !== amount && (\n                <div className=\"product-price\" data-test=\"cart-item-product-price--afterDiscount\">\n                    <ShopperCurrency amount={amountAfterDiscount} />\n                </div>\n            )}\n        </div>\n    </div>\n);\n\nexport default memo(OrderSummaryItem);\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode } from 'react';\n\nimport { TranslatedString } from '../locale';\nimport { IconChevronDown, IconChevronUp } from '../ui/icon';\n\nimport getItemsCount from './getItemsCount';\nimport mapFromCustom from './mapFromCustom';\nimport mapFromDigital from './mapFromDigital';\nimport mapFromGiftCertificate from './mapFromGiftCertificate';\nimport mapFromPhysical from './mapFromPhysical';\nimport OrderSummaryItem from './OrderSummaryItem';\n\nconst COLLAPSED_ITEMS_LIMIT = 4;\n\nexport interface OrderSummaryItemsProps {\n    items: LineItemMap;\n}\n\ninterface OrderSummaryItemsState {\n    isExpanded: boolean;\n}\n\nclass OrderSummaryItems extends React.Component<OrderSummaryItemsProps, OrderSummaryItemsState> {\n    constructor(props: OrderSummaryItemsProps) {\n        super(props);\n\n        this.state = {\n            isExpanded: false,\n        };\n    }\n\n    render(): ReactNode {\n        const { items } = this.props;\n        const { isExpanded } = this.state;\n\n        return (\n            <>\n                <h3\n                    className=\"cart-section-heading optimizedCheckout-contentPrimary\"\n                    data-test=\"cart-count-total\"\n                >\n                    <TranslatedString\n                        data={{ count: getItemsCount(items) }}\n                        id=\"cart.item_count_text\"\n                    />\n                </h3>\n\n                <ul aria-live=\"polite\" className=\"productList\">\n                    {[\n                        ...items.physicalItems\n                            .slice()\n                            .sort((item) => item.variantId)\n                            .map(mapFromPhysical),\n                        ...items.giftCertificates.slice().map(mapFromGiftCertificate),\n                        ...items.digitalItems\n                            .slice()\n                            .sort((item) => item.variantId)\n                            .map(mapFromDigital),\n                        ...(items.customItems || []).map(mapFromCustom),\n                    ]\n                        .slice(0, isExpanded ? undefined : COLLAPSED_ITEMS_LIMIT)\n                        .map((summaryItemProps) => (\n                            <li className=\"productList-item is-visible\" key={summaryItemProps.id}>\n                                <OrderSummaryItem {...summaryItemProps} />\n                            </li>\n                        ))}\n                </ul>\n\n                {this.renderActions()}\n            </>\n        );\n    }\n\n    private renderActions(): ReactNode {\n        const { isExpanded } = this.state;\n\n        if (this.getLineItemCount() < 5) {\n            return;\n        }\n\n        return (\n            <div className=\"cart-actions\">\n                <button\n                    className=\"button button--tertiary button--tiny optimizedCheckout-buttonSecondary\"\n                    onClick={this.handleToggle}\n                    type=\"button\"\n                >\n                    {isExpanded ? (\n                        <>\n                            <TranslatedString id=\"cart.see_less_action\" />\n                            <IconChevronUp />\n                        </>\n                    ) : (\n                        <>\n                            <TranslatedString id=\"cart.see_all_action\" />\n                            <IconChevronDown />\n                        </>\n                    )}\n                </button>\n            </div>\n        );\n    }\n\n    private getLineItemCount(): number {\n        const { items } = this.props;\n\n        return (\n            (items.customItems || []).length +\n            items.physicalItems.length +\n            items.digitalItems.length +\n            items.giftCertificates.length\n        );\n    }\n\n    private handleToggle: () => void = () => {\n        const { isExpanded } = this.state;\n\n        this.setState({ isExpanded: !isExpanded });\n    };\n}\n\nexport default OrderSummaryItems;\n","import classNames from 'classnames';\nimport React, { Component, ReactNode } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { preventDefault } from '../common/dom';\nimport { ShopperCurrency } from '../currency';\n\nexport interface OrderSummaryPriceProps {\n    label: ReactNode;\n    amount?: number | null;\n    zeroLabel?: ReactNode;\n    className?: string;\n    testId?: string;\n    currencyCode?: string;\n    superscript?: string;\n    actionLabel?: ReactNode;\n    onActionTriggered?(): void;\n}\n\nexport interface OrderSummaryPriceState {\n    highlight: boolean;\n    previousAmount?: number;\n}\n\nfunction getDisplayValue(amount?: number | null, zeroLabel?: ReactNode): ReactNode | number {\n    const notYetSetSymbol = '--';\n\n    if (typeof amount === 'undefined' || amount === null) {\n        return notYetSetSymbol;\n    }\n\n    if (zeroLabel && amount === 0) {\n        return zeroLabel;\n    }\n\n    return amount;\n}\n\nfunction isNumberValue(displayValue: number | ReactNode): displayValue is number {\n    return typeof displayValue === 'number';\n}\n\nclass OrderSummaryPrice extends Component<OrderSummaryPriceProps, OrderSummaryPriceState> {\n    static getDerivedStateFromProps(props: OrderSummaryPriceProps, state: OrderSummaryPriceState) {\n        return {\n            highlight: props.amount !== state.previousAmount,\n            previousAmount: props.amount,\n        };\n    }\n\n    state = {\n        highlight: false,\n        previousAmount: 0,\n    };\n\n    render(): ReactNode {\n        const {\n            amount,\n            actionLabel,\n            onActionTriggered,\n            children,\n            className,\n            currencyCode,\n            label,\n            superscript,\n            testId,\n            zeroLabel,\n        } = this.props;\n\n        const { highlight } = this.state;\n        const displayValue = getDisplayValue(amount, zeroLabel);\n\n        return (\n            <div data-test={testId}>\n                <CSSTransition\n                    addEndListener={this.handleTransitionEnd}\n                    classNames=\"changeHighlight\"\n                    in={highlight}\n                    timeout={{}}\n                >\n                    <div\n                        aria-live=\"polite\"\n                        className={classNames(\n                            'cart-priceItem',\n                            'optimizedCheckout-contentPrimary',\n                            className,\n                        )}\n                    >\n                        <span className=\"cart-priceItem-label\">\n                            <span data-test=\"cart-price-label\">\n                                {label}\n                                {'  '}\n                            </span>\n                            {currencyCode && (\n                                <span className=\"cart-priceItem-currencyCode\">\n                                    {`(${currencyCode}) `}\n                                </span>\n                            )}\n                            {onActionTriggered && actionLabel && (\n                                <span className=\"cart-priceItem-link\">\n                                    <a\n                                        data-test=\"cart-price-callback\"\n                                        href=\"#\"\n                                        onClick={preventDefault(onActionTriggered)}\n                                    >\n                                        {actionLabel}\n                                    </a>\n                                </span>\n                            )}\n                        </span>\n\n                        <span className=\"cart-priceItem-value\">\n                            <span data-test=\"cart-price-value\">\n                                {isNumberValue(displayValue) ? (\n                                    <ShopperCurrency amount={displayValue} />\n                                ) : (\n                                    displayValue\n                                )}\n                            </span>\n\n                            {superscript && (\n                                <sup data-test=\"cart-price-value-superscript\">{superscript}</sup>\n                            )}\n                        </span>\n\n                        {children}\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n\n    private handleTransitionEnd: (node: HTMLElement, done: () => void) => void = (node, done) => {\n        const { previousAmount } = this.state;\n\n        node.addEventListener('animationend', ({ target }) => {\n            if (target === node) {\n                this.setState({\n                    highlight: false,\n                    previousAmount,\n                });\n                done();\n            }\n        });\n    };\n}\n\nexport default OrderSummaryPrice;\n","import React, { FunctionComponent } from 'react';\n\nconst OrderSummarySection: FunctionComponent = ({ children }) => (\n    <section className=\"cart-section optimizedCheckout-orderSummary-cartSection\">\n        {children}\n    </section>\n);\n\nexport default OrderSummarySection;\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { ShopperCurrency } from '../currency';\nimport { TranslatedString } from '../locale';\n\nimport OrderSummaryPrice, { OrderSummaryPriceProps } from './OrderSummaryPrice';\n\nexport interface OrderSummaryDiscountProps extends OrderSummaryPriceProps {\n    remaining?: number;\n    code?: string;\n    onRemoved?(code: string): void;\n}\n\nconst OrderSummaryDiscount: FunctionComponent<OrderSummaryDiscountProps> = ({\n    code,\n    remaining,\n    amount,\n    onRemoved,\n    ...rest\n}) => (\n    <OrderSummaryPrice\n        {...rest}\n        {...(onRemoved && {\n            onActionTriggered: () => code && onRemoved(code),\n            actionLabel: <TranslatedString id=\"cart.remove_action\" />,\n        })}\n        amount={-1 * (amount || 0)}\n    >\n        {!!remaining && remaining > 0 && (\n            <span\n                className=\"cart-priceItem-postFix optimizedCheckout-contentSecondary\"\n                data-test=\"cart-price-remaining\"\n            >\n                <TranslatedString id=\"cart.remaining_text\" />\n                {': '}\n                <ShopperCurrency amount={remaining} />\n            </span>\n        )}\n\n        {code && (\n            <span\n                className=\"cart-priceItem-postFix optimizedCheckout-contentSecondary\"\n                data-test=\"cart-price-code\"\n            >\n                {code}\n            </span>\n        )}\n    </OrderSummaryPrice>\n);\n\nexport default memo(OrderSummaryDiscount);\n","import { Coupon, GiftCertificate, Tax } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '../locale';\n\nimport OrderSummaryDiscount from './OrderSummaryDiscount';\nimport OrderSummaryPrice from './OrderSummaryPrice';\n\nexport interface OrderSummarySubtotalsProps {\n    coupons: Coupon[];\n    giftCertificates?: GiftCertificate[];\n    discountAmount?: number;\n    isTaxIncluded?: boolean;\n    taxes?: Tax[];\n    giftWrappingAmount?: number;\n    shippingAmount?: number;\n    handlingAmount?: number;\n    storeCreditAmount?: number;\n    subtotalAmount: number;\n    onRemovedGiftCertificate?(code: string): void;\n    onRemovedCoupon?(code: string): void;\n}\n\nconst OrderSummarySubtotals: FunctionComponent<OrderSummarySubtotalsProps> = ({\n    discountAmount,\n    isTaxIncluded,\n    giftCertificates,\n    taxes,\n    giftWrappingAmount,\n    shippingAmount,\n    subtotalAmount,\n    handlingAmount,\n    storeCreditAmount,\n    coupons,\n    onRemovedGiftCertificate,\n    onRemovedCoupon,\n}) => {\n    return (\n        <>\n            <OrderSummaryPrice\n                amount={subtotalAmount}\n                className=\"cart-priceItem--subtotal\"\n                label={<TranslatedString id=\"cart.subtotal_text\" />}\n                testId=\"cart-subtotal\"\n            />\n\n            {(coupons || []).map((coupon, index) => (\n                <OrderSummaryDiscount\n                    amount={coupon.discountedAmount}\n                    code={coupon.code}\n                    key={index}\n                    label={coupon.displayName}\n                    onRemoved={onRemovedCoupon}\n                    testId=\"cart-coupon\"\n                />\n            ))}\n\n            {!!discountAmount && (\n                <OrderSummaryDiscount\n                    amount={discountAmount}\n                    label={<TranslatedString id=\"cart.discount_text\" />}\n                    testId=\"cart-discount\"\n                />\n            )}\n\n            {(giftCertificates || []).map((giftCertificate, index) => (\n                <OrderSummaryDiscount\n                    amount={giftCertificate.used}\n                    code={giftCertificate.code}\n                    key={index}\n                    label={<TranslatedString id=\"cart.gift_certificate_text\" />}\n                    onRemoved={onRemovedGiftCertificate}\n                    remaining={giftCertificate.remaining}\n                    testId=\"cart-gift-certificate\"\n                />\n            ))}\n\n            {!!giftWrappingAmount && (\n                <OrderSummaryPrice\n                    amount={giftWrappingAmount}\n                    label={<TranslatedString id=\"cart.gift_wrapping_text\" />}\n                    testId=\"cart-gift-wrapping\"\n                />\n            )}\n\n            <OrderSummaryPrice\n                amount={shippingAmount}\n                label={<TranslatedString id=\"cart.shipping_text\" />}\n                testId=\"cart-shipping\"\n                zeroLabel={<TranslatedString id=\"cart.free_text\" />}\n            />\n\n            {!!handlingAmount && (\n                <OrderSummaryPrice\n                    amount={handlingAmount}\n                    label={<TranslatedString id=\"cart.handling_text\" />}\n                    testId=\"cart-handling\"\n                />\n            )}\n\n            {!isTaxIncluded && (taxes || []).map((tax, index) => (\n                <OrderSummaryPrice\n                    amount={tax.amount}\n                    key={index}\n                    label={tax.name}\n                    testId=\"cart-taxes\"\n                />\n            ))}\n\n            {!!storeCreditAmount && (\n                <OrderSummaryDiscount\n                    amount={storeCreditAmount}\n                    label={<TranslatedString id=\"cart.store_credit_text\" />}\n                    testId=\"cart-store-credit\"\n                />\n            )}\n        </>\n    );\n};\n\nexport default memo(OrderSummarySubtotals);\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString, withCurrency, WithCurrencyProps } from '../locale';\n\nimport OrderSummaryPrice from './OrderSummaryPrice';\n\nexport interface OrderSummaryTotalProps {\n    orderAmount: number;\n    shopperCurrencyCode: string;\n    storeCurrencyCode: string;\n}\n\nconst OrderSummaryTotal: FunctionComponent<OrderSummaryTotalProps & WithCurrencyProps> = ({\n    shopperCurrencyCode,\n    storeCurrencyCode,\n    orderAmount,\n    currency,\n}) => {\n    const hasDifferentCurrency = shopperCurrencyCode !== storeCurrencyCode;\n    const label = (\n        <>\n            {hasDifferentCurrency ? (\n                <TranslatedString id=\"cart.estimated_total_text\" />\n            ) : (\n                <TranslatedString id=\"cart.total_text\" />\n            )}\n            {` (${shopperCurrencyCode})`}\n        </>\n    );\n\n    return (\n        <>\n            <OrderSummaryPrice\n                amount={orderAmount}\n                className=\"cart-priceItem--total\"\n                label={label}\n                superscript={hasDifferentCurrency ? '*' : undefined}\n                testId=\"cart-total\"\n            />\n            {hasDifferentCurrency && currency && (\n                <p className=\"cart-priceItem--totalNote\" data-test=\"cart-price-item-total-note\">\n                    <TranslatedString\n                        data={{\n                            total: currency.toStoreCurrency(orderAmount),\n                            code: storeCurrencyCode,\n                        }}\n                        id=\"cart.billed_amount_text\"\n                    />\n                </p>\n            )}\n        </>\n    );\n};\n\nexport default withCurrency(OrderSummaryTotal);\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\n\nexport default function getItemsCount({\n    physicalItems,\n    digitalItems,\n    giftCertificates,\n    customItems,\n}: LineItemMap): number {\n    const totalItemsCount = [...physicalItems, ...digitalItems, ...(customItems || [])].reduce(\n        (total, item) => (total += item.quantity),\n        0,\n    );\n\n    return totalItemsCount + giftCertificates.length;\n}\n","import React, { FunctionComponent } from 'react';\n\nconst IconGiftCertificate: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M20 6h-2.18c.11-.31.18-.65.18-1a2.996 2.996 0 0 0-5.5-1.65l-.5.67-.5-.68C10.96 2.54 10.05 2 9 2 7.34 2 6 3.34 6 5c0 .35.07.69.18 1H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-5-2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM9 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm11 15H4v-2h16v2zm0-5H4V8h5.08L7 10.83 8.62 12 11 8.76l1-1.36 1 1.36L15.38 12 17 10.83 14.92 8H20v6z\" />\n    </svg>\n);\n\nexport default IconGiftCertificate;\n"],"names":["children","className","TranslatedString","id","isTaxIncluded","taxes","storeCurrency","shopperCurrency","headerLink","additionalLineItems","lineItems","total","orderSummarySubtotalsProps","nonBundledLineItems","useMemo","physicalItems","filter","item","parentId","digitalItems","removeBundledItems","displayInclusiveTax","length","OrderSummarySection","OrderSummaryItems","items","OrderSummarySubtotals","OrderSummaryTotal","orderAmount","shopperCurrencyCode","code","storeCurrencyCode","map","tax","index","OrderSummaryPrice","amount","key","label","name","testId","height","viewBox","width","xmlns","d","quantity","extendedListPrice","getOrderSummaryItemImage","imageUrl","alt","src","getDigitalItemDescription","downloadPageUrl","content","href","rel","target","amountAfterDiscount","extendedSalePrice","image","productOptions","options","option","value","IconGiftCertificate","extendedComparisonPrice","description","giftWrapping","undefined","memo","isNumber","ShopperCurrency","props","handleToggle","isExpanded","state","setState","render","this","data","count","getItemsCount","slice","sort","variantId","giftCertificates","customItems","summaryItemProps","renderActions","getLineItemCount","onClick","type","IconChevronDown","highlight","previousAmount","handleTransitionEnd","node","done","addEventListener","getDerivedStateFromProps","actionLabel","onActionTriggered","currencyCode","superscript","zeroLabel","displayValue","getDisplayValue","CSSTransition","addEndListener","classNames","in","timeout","isNumberValue","Component","remaining","onRemoved","rest","discountAmount","giftWrappingAmount","shippingAmount","subtotalAmount","handlingAmount","storeCreditAmount","coupons","onRemovedGiftCertificate","onRemovedCoupon","coupon","discountedAmount","displayName","giftCertificate","used","currency","hasDifferentCurrency","toStoreCurrency","reduce"],"sourceRoot":""}